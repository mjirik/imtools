language: python
python: 2.7
# install new cmake
#addons:
#  apt:
#    packages:
#      - cmake
#    sources:
#      - kalakris-cmake

os:
  - linux
#  - osx
#    - windows # on bash there does not work linux X server
services:
  - xvfb
env:
#  - CONDA_PYTHON_VERSION=2.7
  - CONDA_PYTHON_VERSION=3.6
  - CONDA_PYTHON_VERSION=3.7

matrix:
  include:
    - os: osx
      language: minimal
      name: osx python36
      env:
        - CONDA_PYTHON_VERSION=3.6
    - os: osx
      language: minimal
      name: osx python37
      env:
        - CONDA_PYTHON_VERSION=3.7
    - os: windows
      language: minimal
      name: windows python36
      env:
        - CONDA_PYTHON_VERSION=3.6
  allow_failures:
    - env: CONDA_PYTHON_VERSION=2.7
#    - env: CONDA_PYTHON_VERSION=3.7
    - name: "osx python36"
    - name: "osx python37"
    - name: "windows python36"
  fast_finish: true
virtualenv:
  system_site_packages: true

before_install:
#    - sudo apt-get update
#    - sudo apt-get install -qq cmake libinsighttoolkit3-dev libpng12-dev libgdcm2-dev

    - wget https://raw.githubusercontent.com/mjirik/discon/master/tools/install_conda.sh && source install_conda.sh
    # We do this conditionally because it saves us some downloading if the
    # version is the same.
#    - if [[ "$CONDA_PYTHON_VERSION" == "2.7" ]]; then
#        wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
#      else
#        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
#      fi
#    - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
#    - chmod +x miniconda.sh
#    - ./miniconda.sh -b
#    - bash miniconda.sh -b -p $HOME/miniconda
#    - export PATH="$HOME/miniconda/bin:$PATH"
#    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    # Useful for debugging any issues with conda
    - conda info -a
#    - wget http://147.228.240.61/queetech/sample-extra-data/io3d_sample_data.zip && unzip io3d_sample_data.zip

# command to install dependencies
install:
    # Conda setup
    - conda update --yes conda
    - conda config --add channels conda-forge
    - conda config --add channels SimpleITK
    - conda config --add channels mjirik
    - conda config --add channels luispedro
    - conda config --add channels menpo
    - conda list
    - conda install --yes --file requirements_conda.txt python=$CONDA_PYTHON_VERSION pytest-cov pip
#    - conda install -y -c conda-forge python-coveralls pytest-cov
#    - pip install coveralls
    - pip install -r requirements_pip.txt
#    - pip install .
    - conda list

#    - python -m imtools.sample_data biodur_sample gensei_slices -o sample_data
#    - ls
    - python -m io3d.datasets -l gensei_slices  biodur_sample 3Dircadb1.1
#    - ls ~/data/medical/orig/
#    - python -m io3d.datasets -l biodur_sample
# install julia LarSurf package (not necessary)
    - conda install -y -c conda-forge julia
    # not necessary
#    - julia -e 'using Pkg; Pkg.add("PyCall"); ENV["PYTHON"] = split(read(`which python`, String), "\n")[1]; Pkg.build("PyCall")'
    - pip install julia
    - julia --version
    - python -c "import julia; julia.install()"
    - python -c "from julia import Julia; jl = Julia(compiled_modules=False); from julia import Base; Base.sind(90)"
    - python -c "import Pkg; Pkg.install('LarSurf')"
#    - python -c "from julia import Base; Base.sind(90)"
# command to run tests
script: python -m pytest --cov=imtools/
after_success: coveralls
#script:
##    - nosetests -c setup.cfg -s --nologcapture
##    - python tests.py -c setup.cfg --with-coverage --cover-package=imtools -v
#    - nosetests -c setup.cfg --with-coverage --cover-package=imtools -v
## use agg in matplotlib doesnt make difference with normal nosetests
