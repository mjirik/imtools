package:
  name: imtools
  version: "1.0.2"

source:
  git_rev: 1.0.2
  git_url: .
#  fn: imtools-1.0.2.tar.gz
#  url: https://pypi.python.org/packages/source/i/imtools/imtools-1.0.2.tar.gz
#  md5: 2c88dfda63b4b8dc2f849e4e0218f7fb
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - imtools = imtools:main
    #
    # Would create an entry point called imtools that calls imtools.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy
    - scipy
    - scikit-image
    - matplotlib
    - mock
    - nose
    - vtk
    - skelet3d >=1.5.3
    - checksumdir
    - vtkviewer >=0.0.7
    - dicom2fem
    - io3d >=1.3.30
    - fibrous
    - sed3
    - ruamel.yaml
    - python-dateutil # added trying to solve build problems
#removed
#    - opencv

  run:
    - python
    - numpy
    - scipy
    - scikit-image
    - matplotlib
    - vtk
    - skelet3d >=1.5.3
    - checksumdir
    - vtkviewer >=0.0.7
    - dicom2fem # because of seg2fem
    - io3d >=1.3.30
    - fibrous
    - sed3
    - ruamel.yaml
    - python-dateutil # added trying to solve build problems
# removed
#    - opencv

test:
  # Python imports
  imports:
    - imtools

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/mjirik/imtools
  license: BSD License
  summary: '3D data processing toolbox'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
